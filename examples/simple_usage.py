#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Checkpoint API
"""

import requests
import json
from requests.auth import HTTPBasicAuth

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE_URL = "http://localhost"
API_USERNAME = "admin"
API_PASSWORD = "checkpoint2025"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –ø–∞—Ä–æ–ª—å

def get_health_status():
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã"""
    try:
        response = requests.get(f"{API_BASE_URL}/health", timeout=10)
        if response.status_code == 200:
            return response.json()
        else:
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return None

def get_all_checkpoints():
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—É–Ω–∫—Ç—ã –ø—Ä–æ–ø—É—Å–∫–∞"""
    try:
        auth = HTTPBasicAuth(API_USERNAME, API_PASSWORD)
        response = requests.get(f"{API_BASE_URL}/api/v1/checkpoints", auth=auth, timeout=10)
        
        if response.status_code == 200:
            return response.json()
        else:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return None

def get_checkpoint_by_id(checkpoint_id):
    """–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –ø—Ä–æ–ø—É—Å–∫–∞"""
    try:
        auth = HTTPBasicAuth(API_USERNAME, API_PASSWORD)
        response = requests.get(f"{API_BASE_URL}/api/v1/checkpoints/{checkpoint_id}", auth=auth, timeout=10)
        
        if response.status_code == 200:
            return response.json()
        else:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ID {checkpoint_id}: {response.status_code}")
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return None

def get_statistics():
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    try:
        auth = HTTPBasicAuth(API_USERNAME, API_PASSWORD)
        response = requests.get(f"{API_BASE_URL}/api/v1/stats", auth=auth, timeout=10)
        
        if response.status_code == 200:
            return response.json()
        else:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {response.status_code}")
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã
    health = get_health_status()
    if health:
        print(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç: {health['status']}")
        print(f"üìä KeyDB: {health['keydb_status']}")
        print(f"üïê –í—Ä–µ–º—è: {health['timestamp']}")
    else:
        print("‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return
    
    print("\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—É–Ω–∫—Ç–æ–≤ –ø—Ä–æ–ø—É—Å–∫–∞...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—É–Ω–∫—Ç—ã –ø—Ä–æ–ø—É—Å–∫–∞
    checkpoints_data = get_all_checkpoints()
    if checkpoints_data:
        total = checkpoints_data.get('total', 0)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {total} –ø—É–Ω–∫—Ç–æ–≤ –ø—Ä–æ–ø—É—Å–∫–∞")
        
        if total > 0:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –ø—É–Ω–∫—Ç–∞ –ø—Ä–æ–ø—É—Å–∫–∞
            checkpoints = checkpoints_data.get('checkpoints', [])
            print("\nüìù –ü–µ—Ä–≤—ã–µ –ø—É–Ω–∫—Ç—ã –ø—Ä–æ–ø—É—Å–∫–∞:")
            for i, checkpoint in enumerate(checkpoints[:3]):
                print(f"  {i+1}. {checkpoint.get('name', 'N/A')} ({checkpoint.get('country', 'N/A')})")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–≤–æ–º –ø—É–Ω–∫—Ç–µ –ø—Ä–æ–ø—É—Å–∫–∞
            if checkpoints:
                first_checkpoint = checkpoints[0]
                checkpoint_id = first_checkpoint.get('id')
                
                print(f"\nüîç –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É–Ω–∫—Ç–µ –ø—Ä–æ–ø—É—Å–∫–∞: {first_checkpoint.get('name', 'N/A')}")
                detailed_data = get_checkpoint_by_id(checkpoint_id)
                if detailed_data:
                    print(f"  ID: {detailed_data.get('id', 'N/A')}")
                    print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {detailed_data.get('name', 'N/A')}")
                    print(f"  –°—Ç—Ä–∞–Ω–∞: {detailed_data.get('country', 'N/A')}")
                    print(f"  –°—Ç–∞—Ç—É—Å: {detailed_data.get('status', 'N/A')}")
                    
                    if 'stats' in detailed_data:
                        stats = detailed_data['stats']
                        print(f"  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
        else:
            print("‚ö†Ô∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—É–Ω–∫—Ç–∞—Ö –ø—Ä–æ–ø—É—Å–∫–∞")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø—É–Ω–∫—Ç–∞—Ö –ø—Ä–æ–ø—É—Å–∫–∞")
    
    print("\nüìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = get_statistics()
    if stats:
        print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:")
        print(f"  –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {stats.get('total_checkpoints', 0)}")
        
        by_country = stats.get('by_country', {})
        if by_country:
            print("  –ü–æ —Å—Ç—Ä–∞–Ω–∞–º:")
            for country, count in by_country.items():
                print(f"    {country}: {count}")
        
        print(f"  –°—Ä–µ–¥–Ω—è—è –∑–∞–≥—Ä—É–∑–∫–∞: {stats.get('average_load', 0)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –ø—Ä–æ–ø—É—Å–∫–∞
        top_loaded = stats.get('top_loaded', [])
        if top_loaded:
            print("  –¢–æ–ø –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö:")
            for i, checkpoint in enumerate(top_loaded[:3]):
                print(f"    {i+1}. {checkpoint.get('name', 'N/A')}: {checkpoint.get('load', 0)}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")

if __name__ == "__main__":
    main()


