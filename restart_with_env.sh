#!/bin/bash

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å –Ω–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏–∑ .env
set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

error() {
    echo -e "${RED}‚ùå${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è${NC} $1"
}

# –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É Docker Compose
if docker compose version >/dev/null 2>&1; then
    DOCKER_COMPOSE="docker compose"
elif command -v docker-compose &> /dev/null; then
    DOCKER_COMPOSE="docker-compose"
else
    error "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å –Ω–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏–∑ .env..."

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    warning ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    if [ -f "api/env.prod.example" ]; then
        log "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ env.prod.example –≤ .env"
        cp api/env.prod.example .env
        warning "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏"
        echo ""
        echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞:"
        cat .env
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞..."
    else
        error "–ù–µ—Ç –ø—Ä–∏–º–µ—Ä–∞ .env —Ñ–∞–π–ª–∞"
        exit 1
    fi
fi

# –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
log "–¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ .env:"
echo "================================"
cat .env
echo "================================"

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
$DOCKER_COMPOSE -f api/docker-compose.prod.yml -p checkpoint-prod down 2>/dev/null || true
$DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full down 2>/dev/null || true

# –û—á–∏—Å—Ç–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã
log "–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤..."
docker system prune -f

# –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å –Ω–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
log "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å –Ω–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏..."
$DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full up -d --build

# –ñ–¥–∞—Ç—å –∑–∞–ø—É—Å–∫–∞
log "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (60 —Å–µ–∫—É–Ω–¥)..."
sleep 60

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
$DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full ps

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ API –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö..."
for i in {1..3}; do
    log "API$i –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
    docker exec checkpoint-api${i}-full env | grep -E "(KEYDB_|AUTH_|RATE_LIMIT|INSTANCE_ID)" || true
    echo ""
done

# –¢–µ—Å—Ç —Å–µ—Ä–≤–∏—Å–æ–≤
log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –¢–µ—Å—Ç KeyDB
if $DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full exec -T keydb keydb-cli ping | grep -q "PONG"; then
    success "KeyDB —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "KeyDB –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

# –¢–µ—Å—Ç API –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤
for i in {1..3}; do
    if docker exec checkpoint-api${i}-full wget --quiet --tries=1 --spider http://localhost:8080/health 2>/dev/null; then
        success "API$i —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "API$i –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        log "–õ–æ–≥–∏ API$i:"
        docker logs checkpoint-api${i}-full --tail 5
    fi
done

# –¢–µ—Å—Ç Nginx
if curl -s --connect-timeout 5 http://localhost/health > /dev/null 2>&1; then
    success "Nginx –∏ API —Ä–∞–±–æ—Ç–∞—é—Ç"
else
    error "Nginx –∏–ª–∏ API –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç"
    log "–õ–æ–≥–∏ Nginx:"
    docker logs checkpoint-nginx-full --tail 10
fi

# –¢–µ—Å—Ç —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π..."
response=$(curl -s -w "%{http_code}" -o /dev/null \
    -H 'Authorization: Basic YWRtaW46Y2hlY2twb2ludDIwMjU=' \
    http://localhost/api/v1/checkpoints 2>/dev/null || echo "000")

case $response in
    200)
        success "API —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $response)"
        ;;
    401)
        warning "API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ–≤–µ—Ä–Ω–∞—è (HTTP $response)"
        ;;
    000)
        error "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è)"
        ;;
    *)
        warning "API –æ—Ç–≤–µ—Ç–∏–ª —Å –∫–æ–¥–æ–º $response"
        ;;
esac

echo ""
success "üéâ –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞ —Å –Ω–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏!"
echo ""
log "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "‚Ä¢ –°—Ç–∞—Ç—É—Å: $DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full ps"
echo "‚Ä¢ –õ–æ–≥–∏: $DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full logs -f"
echo "‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: $DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full down"
echo "‚Ä¢ –¢–µ—Å—Ç API: curl http://localhost/health"
echo "‚Ä¢ –¢–µ—Å—Ç —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π: curl -H 'Authorization: Basic YWRtaW46Y2hlY2twb2ludDIwMjU=' http://localhost/api/v1/checkpoints"
echo "‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env: nano .env"


