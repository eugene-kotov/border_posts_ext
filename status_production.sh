#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Checkpoint System
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./status_production.sh

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

PROJECT_NAME="checkpoint-full"
COMPOSE_FILE="docker-compose.full.yml"

log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Checkpoint System"
echo "================================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ git —Å—Ç–∞—Ç—É—Å–∞
log "üìã Git —Å—Ç–∞—Ç—É—Å:"
echo "–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $(git branch --show-current)"
echo "–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: $(git log -1 --oneline)"
echo "–°—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:"
git status --porcelain

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
log "üê≥ Docker —Å—Ç–∞—Ç—É—Å:"
if command -v docker &> /dev/null; then
    echo "Docker –≤–µ—Ä—Å–∏—è: $(docker --version)"
    echo "Docker Compose –≤–µ—Ä—Å–∏—è: $(docker-compose --version)"
else
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "üì¶ –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
if [ -f "$COMPOSE_FILE" ]; then
    docker-compose -f $COMPOSE_FILE -p $PROJECT_NAME ps
else
    error "–§–∞–π–ª $COMPOSE_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
log "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.MemPerc}}" checkpoint-keydb-full checkpoint-api-full checkpoint-parser-full checkpoint-nginx-full 2>/dev/null || warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
log "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API:"
HEALTH_URL="http://localhost/health"
if curl -s -f "$HEALTH_URL" > /dev/null 2>&1; then
    success "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "–û—Ç–≤–µ—Ç health check:"
    curl -s "$HEALTH_URL" | jq . 2>/dev/null || curl -s "$HEALTH_URL"
else
    error "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ KeyDB
log "üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ KeyDB:"
if docker exec checkpoint-keydb-full keydb-cli ping > /dev/null 2>&1; then
    success "‚úÖ KeyDB –¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ KeyDB:"
    docker exec checkpoint-keydb-full keydb-cli info memory | grep used_memory_human
    docker exec checkpoint-keydb-full keydb-cli info keyspace
else
    error "‚ùå KeyDB –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
log "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫):"
docker-compose -f $COMPOSE_FILE -p $PROJECT_NAME logs --tail=10 2>/dev/null | grep -i error || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
log "üíΩ –î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:"
df -h / | tail -1 | awk '{print "Root partition: " $3 " used of " $2 " (" $5 ")"}'

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø–æ—Ä—Ç–æ–≤
log "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
netstat -tlnp | grep -E ':(80|443|6379|8080)' || echo "–ü–æ—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
log "üìö –ò—Å—Ç–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:"
if [ -f "update_history.log" ]; then
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:"
    tail -5 update_history.log
else
    echo "–§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç–∫–∞—Ç–æ–≤
log "üîÑ –ò—Å—Ç–æ—Ä–∏—è –æ—Ç–∫–∞—Ç–æ–≤:"
if [ -f "rollback_history.log" ]; then
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ—Ç–∫–∞—Ç–æ–≤:"
    tail -5 rollback_history.log
else
    echo "–§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
log "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
