#!/bin/bash

# –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Checkpoint System
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./manage_production.sh [–∫–æ–º–∞–Ω–¥–∞]

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

show_help() {
    echo -e "${BLUE}Checkpoint System - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–æ–º${NC}"
    echo "=================================================="
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./manage_production.sh [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  ${GREEN}update${NC}     - –û–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∏–∑ git (./update_production.sh)"
    echo "  ${GREEN}restart${NC}    - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É (./restart_production.sh)"
    echo "  ${GREEN}rollback${NC}   - –û—Ç–∫–∞—Ç–∏—Ç—å –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏ (./rollback_production.sh)"
    echo "  ${GREEN}status${NC}     - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã (./status_production.sh)"
    echo "  ${GREEN}logs${NC}       - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã"
    echo "  ${GREEN}monitor${NC}    - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤ (./monitor_resources.sh)"
    echo "  ${GREEN}backup${NC}     - –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –¥–∞–Ω–Ω—ã—Ö"
    echo "  ${GREEN}clean${NC}      - –û—á–∏—Å—Ç–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ Docker —Ä–µ—Å—É—Ä—Å—ã"
    echo "  ${GREEN}help${NC}       - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  ./manage_production.sh update main"
    echo "  ./manage_production.sh rollback abc123"
    echo "  ./manage_production.sh status"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.full.yml" ]; then
    echo -e "${RED}–û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ release/${NC}"
    exit 1
fi

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
case "${1:-help}" in
    "update")
        shift
        ./update_production.sh "$@"
        ;;
    "restart")
        ./restart_production.sh
        ;;
    "rollback")
        shift
        ./rollback_production.sh "$@"
        ;;
    "status")
        ./status_production.sh
        ;;
    "logs")
        echo -e "${BLUE}üìã –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã:${NC}"
        docker-compose -f docker-compose.full.yml -p checkpoint-full logs --tail=50 -f
        ;;
    "monitor")
        ./monitor_resources.sh
        ;;
    "backup")
        echo -e "${BLUE}üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞...${NC}"
        BACKUP_DIR="../backups/manual_$(date +%Y%m%d_%H%M%S)"
        mkdir -p "$BACKUP_DIR"
        
        # –ë—ç–∫–∞–ø KeyDB
        docker-compose -f docker-compose.full.yml -p checkpoint-full exec -T keydb keydb-cli --rdb /tmp/dump.rdb BGSAVE
        docker cp checkpoint-keydb-full:/tmp/dump.rdb "$BACKUP_DIR/keydb_dump.rdb" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø KeyDB"
        
        # –ë—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        cp -r . "$BACKUP_DIR/config"
        
        echo -e "${GREEN}‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ $BACKUP_DIR${NC}"
        ;;
    "clean")
        echo -e "${BLUE}üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤...${NC}"
        read -p "–£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            docker image prune -f
        fi
        
        read -p "–£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            docker container prune -f
        fi
        
        read -p "–£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–æ–º–∞? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            docker volume prune -f
        fi
        
        echo -e "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
        ;;
    "help"|*)
        show_help
        ;;
esac
