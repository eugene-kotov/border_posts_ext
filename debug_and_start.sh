#!/bin/bash

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

error() {
    echo -e "${RED}‚ùå${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è${NC} $1"
}

log "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Checkpoint —Å–∏—Å—Ç–µ–º—ã..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if command -v docker &> /dev/null; then
    success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker --version)"
else
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose..."
if docker compose version >/dev/null 2>&1; then
    DOCKER_COMPOSE="docker compose"
    success "Docker Compose v2: $(docker compose version --short)"
elif command -v docker-compose &> /dev/null; then
    DOCKER_COMPOSE="docker-compose"
    success "Docker Compose v1: $(docker-compose --version)"
else
    error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
if [ -f "docker-compose.full.yml" ]; then
    success "docker-compose.full.yml –Ω–∞–π–¥–µ–Ω"
else
    error "docker-compose.full.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [ -f "nginx.loadbalancer.conf" ]; then
    success "nginx.loadbalancer.conf –Ω–∞–π–¥–µ–Ω"
else
    error "nginx.loadbalancer.conf –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
$DOCKER_COMPOSE -f api/docker-compose.prod.yml -p checkpoint-prod down 2>/dev/null || true
$DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full down 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
log "–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤..."
docker system prune -f

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
log "–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
$DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full up -d --build

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
log "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (60 —Å–µ–∫—É–Ω–¥)..."
sleep 60

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
$DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
if netstat -tlnp 2>/dev/null | grep -q ":80 "; then
    success "–ü–æ—Ä—Ç 80 –æ—Ç–∫—Ä—ã—Ç"
else
    warning "–ü–æ—Ä—Ç 80 –Ω–µ –æ—Ç–∫—Ä—ã—Ç"
fi

if netstat -tlnp 2>/dev/null | grep -q ":6379 "; then
    success "–ü–æ—Ä—Ç 6379 (KeyDB) –æ—Ç–∫—Ä—ã—Ç"
else
    warning "–ü–æ—Ä—Ç 6379 –Ω–µ –æ—Ç–∫—Ä—ã—Ç"
fi

# –¢–µ—Å—Ç —Å–µ—Ä–≤–∏—Å–æ–≤
log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –¢–µ—Å—Ç KeyDB
if $DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full exec -T keydb keydb-cli ping | grep -q "PONG"; then
    success "KeyDB —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "KeyDB –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

# –¢–µ—Å—Ç API –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤
for i in {1..3}; do
    if $DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full exec -T api$i wget --quiet --tries=1 --spider http://localhost:8080/health 2>/dev/null; then
        success "API$i —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "API$i –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
done

# –¢–µ—Å—Ç Nginx
if curl -s --connect-timeout 5 http://localhost/health > /dev/null 2>&1; then
    success "Nginx –∏ API —Ä–∞–±–æ—Ç–∞—é—Ç"
else
    error "Nginx –∏–ª–∏ API –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç"
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    log "–õ–æ–≥–∏ Nginx:"
    $DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full logs nginx | tail -10
    
    log "–õ–æ–≥–∏ API1:"
    $DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full logs api1 | tail -10
fi

# –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç
log "–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç API..."
response=$(curl -s -w "%{http_code}" -o /dev/null http://localhost/health 2>/dev/null || echo "000")
if [ "$response" = "200" ]; then
    success "API –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $response)"
elif [ "$response" = "000" ]; then
    error "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
else
    warning "API –æ—Ç–≤–µ—Ç–∏–ª —Å –∫–æ–¥–æ–º $response"
fi

echo ""
log "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "‚Ä¢ –°—Ç–∞—Ç—É—Å: $DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full ps"
echo "‚Ä¢ –õ–æ–≥–∏: $DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full logs -f"
echo "‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: $DOCKER_COMPOSE -f docker-compose.full.yml -p checkpoint-full down"
echo "‚Ä¢ –¢–µ—Å—Ç API: curl http://localhost/health"
echo "‚Ä¢ –¢–µ—Å—Ç —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π: curl -H 'Authorization: Basic YWRtaW46Y2hlY2twb2ludDIwMjU=' http://localhost/api/v1/checkpoints"
